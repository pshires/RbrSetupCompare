<h1 class="my-4 text-center">Add Setup Files for Comparison</h1>

<div class="container">
  <div class="alert alert-info text-center">
    RBR Setup files can be found in <code>SavedGames</code> under your base game directory. Example: <strong>RichardBurnsRally/SavedGames/</strong>
  </div>

  <%= form_with url: compare_path, local: true, html: { multipart: true, id: "upload-form" } do %>
    <% if flash[:error] %>
      <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <%= flash[:error] %>
      </div>
    <% end %>

    <div id="file-upload-container" class="mb-4"></div>

    <div class="d-grid gap-3 mb-4 text-center">
      <button type="button" id="add-file-button" class="btn btn-md btn-outline-primary fw-bold">
        + Add Another Setup File (or drag & drop)
      </button>

      <%= submit_tag "Compare Setups", class: "btn btn-success btn-lg fw-bold" %>
    </div>
  <% end %>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        let fileIndex = 0;
        const container = document.getElementById('file-upload-container');
        const addFileButton = document.getElementById('add-file-button');

        function setupDropzone(dropzoneId, inputId) {
            const dropzone = document.getElementById(dropzoneId);
            const fileInput = document.getElementById(inputId);
            const defaultText = dropzone.getAttribute('data-default-text');

            function updateDropzoneText() {
                dropzone.textContent = fileInput.files.length > 0
                  ? `Selected: ${fileInput.files[0].name}`
                  : defaultText;
            }

            dropzone.addEventListener('click', () => fileInput.click());
            fileInput.addEventListener('change', updateDropzoneText);

            dropzone.addEventListener('dragover', e => {
                e.preventDefault();
                dropzone.classList.add('dragover');
            });

            dropzone.addEventListener('dragleave', () => {
                dropzone.classList.remove('dragover');
            });

            dropzone.addEventListener('drop', e => {
                e.preventDefault();
                dropzone.classList.remove('dragover');
                const files = e.dataTransfer.files;
                if (files.length > 0) {
                    fileInput.files = files;
                    updateDropzoneText();
                }
            });

            updateDropzoneText();
        }

        function createFileInputBlock() {
            fileIndex++;
            const dropzoneId = `dropzone${fileIndex}`;
            const inputId = `file-input-${fileIndex}`;

            const block = document.createElement('div');
            block.classList.add('file-upload-block');
            block.innerHTML = `
        <div class="dropzone" id="${dropzoneId}" data-default-text="Drag & Drop (or Click) to Upload Setup ${fileIndex}"></div>
        <input type="file" name="files[]" id="${inputId}" style="display: none;" />
      `;

            container.appendChild(block);
            setupDropzone(dropzoneId, inputId);
            return { dropzoneId, inputId };
        }

        function addFileInput() {
            createFileInputBlock();
        }

        function addFileInputWithFile(file) {
            const { inputId, dropzoneId } = createFileInputBlock();

            const fileInput = document.getElementById(inputId);
            const dropzone = document.getElementById(dropzoneId);

            // Use DataTransfer to set the file programmatically
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            fileInput.files = dataTransfer.files;

            dropzone.textContent = `Selected: ${file.name}`;
        }

        addFileInput();
        addFileInput();
        addFileButton.addEventListener('click', addFileInput);

        addFileButton.addEventListener('dragover', e => {
            e.preventDefault();
            addFileButton.classList.add('dragover');
        });

        addFileButton.addEventListener('dragleave', () => {
            addFileButton.classList.remove('dragover');
        });

        addFileButton.addEventListener('drop', e => {
            e.preventDefault();
            addFileButton.classList.remove('dragover');
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                addFileInputWithFile(files[0]);
            }
        });
    });
</script>